// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ported by gobftald from Linux: drivers/net/ethernet/broadcom/genet/bcmmii.c

#include "bcmgenet.h"
#include "bcmgenet_.h"

zx_status_t BCMacDevice::InitDevice() {
  

  /*
  mmio_->Write32(0, BC_MAC_DMA_INTENABLE);

  mmio_->Write32(X8PBL | DMA_PBL, BC_MAC_DMA_BUSMODE);

  mmio_->Write32(DMA_OPMODE_TSF | DMA_OPMODE_RSF, BC_MAC_DMA_OPMODE);
  mmio_->SetBits32(DMA_OPMODE_SR | DMA_OPMODE_ST, BC_MAC_DMA_OPMODE);

  // Clear all the interrupt flags
  mmio_->Write32(~0, BC_MAC_DMA_STATUS);

  // Disable(mask) interrupts generated by the mmc block
  mmio_->Write32(~0, BC_MAC_MMC_INTR_MASK_RX);
  mmio_->Write32(~0, BC_MAC_MMC_INTR_MASK_TX);
  mmio_->Write32(~0, BC_MAC_MMC_IPC_INTR_MASK_RX);

  // Enable Interrupts
  mmio_->Write32(DMA_INT_NIE | DMA_INT_AIE | DMA_INT_FBE | DMA_INT_RIE | DMA_INT_RUE | DMA_INT_OVE |
                     DMA_INT_UNE | DMA_INT_TSE | DMA_INT_RSE,
                 BC_MAC_DMA_INTENABLE);

  mmio_->Write32(0, BC_MAC_MAC_MACADDR0HI);
  mmio_->Write32(0, BC_MAC_MAC_MACADDR0LO);
  mmio_->Write32(~0, BC_MAC_MAC_HASHTABLEHI);
  mmio_->Write32(~0, BC_MAC_MAC_HASHTABLELO);

  // TODO - configure filters
  zxlogf(INFO, "macaddr0hi = %08x", mmio_->Read32(BC_MAC_MAC_MACADDR0HI));
  zxlogf(INFO, "macaddr0lo = %08x", mmio_->Read32(BC_MAC_MAC_MACADDR0LO));

  mmio_->SetBits32((1 << 10) | (1 << 4) | (1 << 0), BC_MAC_MAC_FRAMEFILT);

  mmio_->Write32(GMAC_CORE_INIT, BC_MAC_MAC_CONF);

  return ZX_OK;
  */
}
